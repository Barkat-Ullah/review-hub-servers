generator client {
  provider = "prisma-client-js"
  output   = "generated/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  name     String
  username String    @unique
  email    String    @unique
  password String
  role     User_Role @default(USER)

  reviews Review[]
  votes   Vote[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Category {
  id   String @id @default(uuid())
  name String @unique

  reviews Review[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Review {
  id             String        @id @default(uuid())
  title          String
  description    String
  rating         Int
  purchaseSource String?
  imageUrls      String[]
  status         Review_Status @default(DRAFT)

  // Relations
  user   User   @relation(fields: [userId], references: [id])
  userId String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  votes Vote[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews")
}

model Vote {
  value Int

  // Relations
  user   User   @relation(fields: [userId], references: [id])
  userId String

  review   Review @relation(fields: [reviewId], references: [id])
  reviewId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, reviewId])
  @@map("votes")
}

enum User_Role {
  USER
  ADMIN
}

enum Review_Status {
  PENDING
  DRAFT
  PUBLISHED
  UNPUBLISHED
}
